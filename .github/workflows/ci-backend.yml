# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-exoscale-image

on:
  push:
    branches:
      - main
    paths:
      - "src/backend/**"

env:
  REGISTRY_NAME: "exo.container-registry.com"
  REPOSITORY_PATH: "c213-emf/todo-app"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Récupération du code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2: Configuration de Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Verify Go installation
        run: go version

      # Étape 3: Build de l'image Docker avec le bon tag
      - name: Build Docker image
        run: docker build -t todo-app -t ${{ env.REGISTRY_NAME }}/${{ env.REPOSITORY_PATH }}:AH -f ./src/backend/Dockerfile ./src/backend


      # Étape 4: Connexion à la registry Docker avec les secrets
      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 5: Pousser l'image vers la registry
      - name: Build Docker image
        run: |
          cd ./src/backend
          docker build -t todo-app -t ${{ env.REGISTRY_NAME }}/${{ env.REPOSITORY_PATH }}:AH -f Dockerfile .

